/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd.Consola;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.conexion;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import BackEnd.DOA.Error;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author sinozuke
 */
public class Interfaz_Consola extends javax.swing.JFrame implements Runnable{

    private ArrayList<Error> errores;
    private PdfWriter instance;
    private Document errorpdf;
    private PdfPTable tabla;
    private Paragraph inilex;
    private Paragraph inisin;
    private Paragraph inisem;
    private Paragraph fin;
    private final Font fuente = new Font();
    private PdfPCell cabeza1;
    private PdfPCell cabeza2;
    private PdfPCell cabeza3;
    private PdfPCell Pie;
    private final JFileChooser fc = new JFileChooser();
    private File entrada;
    private BufferedReader br;
    /**
     * Creates new form Interfaz_Consola
     */
    public Interfaz_Consola() {
        initComponents();
        fuente.setSize(18);
    }

    public void setErrores(ArrayList<Error> errores) {
        this.errores = errores;
    }
        
    private void cargar(){
        fc.showOpenDialog(this);
        entrada = new File(fc.getSelectedFile().getAbsolutePath());
        if(entrada.canRead()){
            try {
                br = new BufferedReader(new FileReader(entrada));
                while(br.readLine()!=null){
                    txtconsola.append(br.readLine()+"\n");
                }
                br.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getCause());        
            }
        }else{
            JOptionPane.showMessageDialog(this, "El Archivo no Tiene Permisos para ser leido");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @Override
    public void run() {
        this.setVisible(true);
    }
    
    private void mandar_request(){
        conexion.Consola(txtconsola.getText());
    }
    public void reply(String reply){
        this.txtsalida.setText(reply);
    }
    
    public void visualizar_pdf(){
        if(!errores.isEmpty()){
            try {
                instance = PdfWriter.getInstance(errorpdf, new FileOutputStream("err.pdf"));

                errorpdf.open();

                tabla = new PdfPTable(3);

                inilex = new Paragraph("Errores Lexicos",fuente);
                inilex.setLeading(0,1);

                inisin = new Paragraph("Errores Sintacticos",fuente);
                inisin.setLeading(0,1);

                inisem = new Paragraph("Errores Semanticos",fuente);
                inisem.setLeading(0,1);

                fin = new Paragraph("--- Fin de Errores ---",fuente);
                fin.setLeading(0,1);

                cabeza1 = new PdfPCell(inilex);
                cabeza1.setColspan(3);

                cabeza2 = new PdfPCell(inisin);
                cabeza2.setColspan(3);

                cabeza3 = new PdfPCell(inisem);
                cabeza3.setColspan(3);

                Pie = new PdfPCell(fin);
                Pie.setColspan(3);

                tabla.setWidthPercentage(100);

                tabla.addCell(cabeza1);

                errores.stream().forEach((Error err)->{
                    if(err.getTipo().equals("lexico")){
                        tabla.addCell(new PdfPCell(new Paragraph("No.Fila")));
                        tabla.addCell(new PdfPCell(new Paragraph("No.Columna")));
                        tabla.addCell(new PdfPCell(new Paragraph("Descripccion")));
                        
                        tabla.addCell(String.valueOf(err.getFila()));
                        tabla.addCell(String.valueOf(err.getColumna()));
                        tabla.addCell(err.getDescripccion());
                    }
                });

                tabla.addCell(cabeza2);

                errores.stream().forEach((Error err)->{
                    if(err.getTipo().equals("sintactico")){
                        tabla.addCell(new PdfPCell(new Paragraph("No.Fila")));
                        tabla.addCell(new PdfPCell(new Paragraph("No.Columna")));
                        tabla.addCell(new PdfPCell(new Paragraph("Descripccion")));
                        
                        tabla.addCell(String.valueOf(err.getFila()));
                        tabla.addCell(String.valueOf(err.getColumna()));
                        tabla.addCell(err.getDescripccion());
                    }
                });

                tabla.addCell(cabeza3);

                errores.stream().forEach((Error err)->{
                    if(err.getTipo().equals("semantico")){
                        tabla.addCell(new PdfPCell(new Paragraph("No.Fila")));
                        tabla.addCell(new PdfPCell(new Paragraph("No.Columna")));
                        tabla.addCell(new PdfPCell(new Paragraph("Descripccion")));
                        
                        tabla.addCell(String.valueOf(err.getFila()));
                        tabla.addCell(String.valueOf(err.getColumna()));
                        tabla.addCell(err.getDescripccion());
                    }
                });

                tabla.addCell(Pie);

                errorpdf.add(tabla);
                errorpdf.close();
            
            Runtime.getRuntime().exec("evince ./errlex.pdf");
            
            } catch (DocumentException | FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Error al Guardar Pdf");    
            } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "linux No  pude abrir evince");
                    System.out.println("err al ejecutar evince (pdfs()): " + ex.getCause());
            }    
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtconsola = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtsalida = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Consola de Comandos");
        setAutoRequestFocus(false);

        jButton1.setText("Realizar Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Vizualizar Ultimos Errores en PDF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Limiar Consolas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cargar Archivo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("Consola");

        txtconsola.setColumns(20);
        txtconsola.setRows(5);
        jScrollPane1.setViewportView(txtconsola);

        txtsalida.setColumns(20);
        txtsalida.setRows(5);
        jScrollPane2.setViewportView(txtsalida);

        jLabel2.setText("Consola de Salida");

        jLabel3.setText("Acciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.mandar_request();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.visualizar_pdf();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.txtconsola.setText("");
        this.txtsalida.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.cargar();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtconsola;
    private javax.swing.JTextArea txtsalida;
    // End of variables declaration//GEN-END:variables

}
