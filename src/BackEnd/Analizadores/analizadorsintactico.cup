package BackEnd.Analizadores;

import java_cup.runtime.*;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.console;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.Log_in;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.Catalogo_Tiendas;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.Catalogo_Productos;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.usuario;
import javax.swing.JOptionPane;
import BackEnd.DOA.Error;
import BackEnd.DOA.Producto;
import BackEnd.DOA.Tienda;
import BackEnd.DOA.Usuario;
import java.util.ArrayList;

parser code
{:
    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
		System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ ". Identificador "
        +s.value + " no reconocido.");
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
		System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " +
        s.value + " no reconocido.");
    }
:}

action code
{:

		
:}
terminal String numero,cadena,bool;
terminal DI,DF,Igual;
terminal Reply,Access,Registro,Modificar,Eliminacion,Tienda,usuario,Producto,ERR,Lista;
terminal TIPO,PO,FILA,COLUMNA,DESC;
terminal Id,Sucursal,Direccion,Nombre,Telefono,Codigo,Propietario,Cantidad,Marca,Color,Tamano,Sucursal;

non terminal INICIA;
non terminal String CONTENIDO,CONTENIDOP;
non terminal Usuario USU,USUR,UINFO,UINFOP;
non terminal Tienda TR,TC,TM,TE,TINFO,TINFOP;
non terminal Producto PR,PM.PE,PC,PINFO,PINFOP;
non terminal Error ERRC,ERRCP,POC,POCP;
non terminal String LOG,REGIS,DATALOG,DATALOGP;
non terminal ArrayList<Object> LISTA
non terminal Object CL,CLP;

start with INICIA;

INICIA ::= DI Reply DI CONTENIDO DI Reply DF {::}

CONTENIDO ::= CONTENIDOP CONTENIDO
            |CONTENIDO

CONTENIDOP ::=   DI usuario DI USU DI usuario DF {::}
                |DI Tienda DI TC DI Tienda DF
                |DI Producto DI PC DI Producto DF
                |DI ERR DI ERRC DI ERR DF
                |LISTA

LISTA ::= DI Lista DI CL DI Lista DF
CL ::=   CLP CL
        |CLP

CLP ::=  PC
        |TC
        |USU

ERRC ::=     ERRCP ERRC
            |ERRCP

ERRCP ::=    DI  TIPO DI cadena DI TIPO DF
            |DI  PO DI POC DI PO DF
            |DI DESC DI cadena DI DESC DF

POC ::=  POCP POC
        |POCP

POCP ::=     DI FILA DI numero DI FILA DF
            |DI COLUMNA DI numero DI COLUMNA DF

PC ::=   PR
        |PM
        |PE
        |PINFO

TC ::=   TR
        |TM
        |TE
        |TINFO

USU ::=  LOG
        |USUR
        |UINFO

PINFO ::=    PINFOP PINFO
            |PINFOP

TINFO ::=    TINFOP TINFO
            |TINFOP

USU ::=  UINFOP UINFO
        |UINFOP

PINFOP ::=   DI Codigo DI numero DI Codigo DF
            |DI Nombre DI cadena DI Nombre DF
            |DI Cantidad DI numero DI Cantidad DF
            |DI Marca DI cadena DI Marca DF
            |DI Color DI cadena DI Color DF
            |DI Tamano DI numero DI Tamano DF
            |DI Sucursal DI numero DI Sucursal DF

TINFOP ::=   DI Codigo DI numero DI Codigo DF
            |DI Propietario DI numero DI Propietario DF
            |DI Nombre DI cadena DI Nombre DF
            |DI Direccion DI cadena DI Direccion DF
            |DI Telefono DI numero DI Telefono DF

UINFOp ::= DI DI DI DF

PR ::=  DI Registro Id Igual numero Sucursal Igual numero DI bool  DI Registro DF
PM ::=  DI Modificar Id Igual numero Sucursal Igual numero DI bool DI Modificar DF
PE ::=  DI Eliminacion Id Igual numero Sucursal Igual numero DI bool DI Eliminacion DF

TR ::= DI Registro Id Igual numero DI bool  DI Registro DF
TM ::= DI Modificar Id Igual numero DI bool DI Modificar DF
TE ::= DI Eliminacion Id Igual numero DI bool DI Eliminacion DF

USUR ::= DI Registro Id Igual numero DI bool  DI Registro DF

LOG ::=  LOG:val1 DATALOGP:val2                         {:  RESULT = new StringBuilder();
                                                            if(val1.equals("true") || val1.equals("false") || val1.equals("fail")){
                                                            }else if(val2.equals("true") || val2.equals("false") || val2.equals("fail")){
                                                            }
:}
        |DATALOGp:val                                   {:  RESULT = new String(val);:};

DATALOGP ::=  DI Id DI numero:val DI Id DF           {:  RESULT = new String(val);:}
            |DI Access DI bool:val DI Access DF      {:  RESULT = new String(val);:};