package BackEnd.Analizadores;

import java_cup.runtime.*;
import javax.swing.JOptionPane;
import BackEnd.DOA.Objetos.Error;
import BackEnd.DOA.Objetos.Producto;
import BackEnd.DOA.Objetos.Tienda;
import BackEnd.DOA.Objetos.Acess;
import java.util.ArrayList;

/*
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.Log_in;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.Catalogo_Tiendas;
import static compi1.proyecto1_cliente.pkg201403775.Compi1Proyecto1_Cliente201403775.usuario;
*/

parser code
{:
    /**Metodo al que se llama automáticamente ante algún error sintactico.*/
    public void syntax_error(Symbol s){
		System.out.println("Error en la Línea " + (s.right+1) +" Columna "+s.left+ ". Identificador "
        +s.value + " no reconocido.");
    }

    /**Metodo al que se llama en el momento en que ya no es posible una recuperación de
    errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
		System.out.println("Error en la Línea " + (s.right+1)+ "Columna "+s.left+". Identificador " +
        s.value + " no reconocido.");
    }
:}

action code
{:

		
:}
terminal String numero,cadena,bool;
terminal DI,DF,Igual;
terminal Reply,Access,Registro,Modificar,Eliminacion,Tienda,usuario,Producto,ERR,Lista;
terminal TIPO,PO,FILA,COLUMNA,DESC;
terminal Id,Direccion,Nombre,Telefono,Codigo,Propietario,Cantidad,Marca,Color,Tamano,Sucursal;

non terminal INICIA;
non terminal StringBuilder CONTENIDO,CONTENIDOP,R1;
non terminal Tienda TC,TM,TE,TINFO,TINFOP,TCS;
non terminal Producto PR,PM,PE,PC,PINFO,PINFOP,PCS;
non terminal Error ERRC,ERRCP,POC,POCP;
non terminal Acess LOG,DATALOGP;
non terminal ArrayList<Object> LISTA;

start with INICIA;

INICIA ::= DI Reply DI CONTENIDO DI Reply DF                                            {::};

CONTENIDO ::= CONTENIDO CONTENIDOP                                                      {::}
            |CONTENIDOP                                                                 {::};

CONTENIDOP ::=   DI usuario DI LOG  DI usuario DF                                       {::}
                |DI Tienda DI TCS DI Tienda DF                                          {::}
                |DI usuario DI R1  DI usuario DF                                       {::}
                |DI Producto DI PCS DI Producto DF                                      {::}
                |DI ERR DI ERRC DI ERR DF                                               {::}
                |LISTA                                                                  {::};

LISTA ::= DI Lista DI PC DI Lista DF                                                    {::}
        |DI Lista DI TC DI Lista DF                                                    {::};


ERRC ::=     ERRC ERRCP                                                                 {::}
            |ERRCP                                                                      {::};

ERRCP ::=    DI  TIPO DI cadena DI TIPO DF                                              {::}
            |DI  PO DI POC DI PO DF                                                     {::}
            |DI DESC DI cadena DI DESC DF                                               {::};

POC ::=  POC POCP                                                                       {::}
        |POCP                                                                           {::};

POCP ::=     DI FILA DI numero DI FILA DF                                               {::}
            |DI COLUMNA DI numero DI COLUMNA DF                                         {::};

PC ::=   DI Producto DI PINFO DI Producto DF                                            {::};

TC ::=   DI Tienda DI TINFO DI Tienda DF                                                                          {::};
                                                                  

PINFO ::=    PINFO PINFOP                                                               {::}
            |PINFOP                                                                     {::};

TINFO ::=    TINFO TINFOP                                                               {::}
            |TINFOP                                                                     {::};


PINFOP ::=   DI Codigo DI numero DI Codigo DF                                           {::}
            |DI Nombre DI cadena DI Nombre DF                                           {::}
            |DI Cantidad DI numero DI Cantidad DF                                       {::}
            |DI Marca DI cadena DI Marca DF                                             {::}
            |DI Color DI cadena DI Color DF                                             {::}
            |DI Tamano DI numero DI Tamano DF                                           {::}
            |DI Sucursal DI numero DI Sucursal DF                                       {::};


TINFOP ::=   DI Codigo DI numero DI Codigo DF                                           {::}
            |DI Propietario DI numero DI Propietario DF                                 {::}
            |DI Nombre DI cadena DI Nombre DF                                           {::}
            |DI Direccion DI cadena DI Direccion DF                                     {::}
            |DI Telefono DI numero DI Telefono DF                                       {::};

PCS ::= PR                                                                             {::}
        |PM                                                                             {::}
        |PE                                                                             {::};

TCS ::= TM                                                                              {::}
        |TE                                                                             {::};

PR ::=  DI Registro Id Igual numero Sucursal Igual numero DI bool  DI Registro DF       {::};

PM ::=  DI Modificar Id Igual numero Sucursal Igual numero DI bool DI Modificar DF      {::};

PE ::=  DI Eliminacion Id Igual numero Sucursal Igual numero DI bool DI Eliminacion DF  {::};

TM ::= DI Modificar Id Igual numero DI bool DI Modificar DF                             {::};
TE ::= DI Eliminacion Id Igual numero DI bool DI Eliminacion DF                         {::};

R1 ::= DI Registro Id Igual numero:val1 DI bool:val2  DI Registro DF
{:
    RESULT = new StringBuilder();
    RESULT.append("\t $registro id = ");
    RESULT.append(val1);
    RESULT.append("$ ");
    RESULT.append(val2);
    RESULT.append(" $registro-$\n");
    if(val2.equals("True")){
        JOptionPane.showMessageDialog(null,"Registro Exitoso");
    }else{
        JOptionPane.showMessageDialog(null,"El Registro del Usuario " + val1 + " ha Fallado");
    }
:}

        |error usuario {::};

LOG ::=  LOG:val1 DATALOGP:val2
{:
    RESULT = new Acess();
    if(val1.getId()!=null){
        RESULT.setId(val1.getId());
        RESULT.setValor(val2.getValor());
        RESULT.concatenar(val1.getreply());
        RESULT.concatenar(val2.getreply());
    }else{
        RESULT.setId(val2.getId());
        RESULT.setValor(val1.getValor());
        RESULT.concatenar(val2.getreply());
        RESULT.concatenar(val1.getreply());
    }
    switch (RESULT.getValor()) {
        case "True":
            usuario.setId(Integer.parseInt(RESULT.getId()));
            Catalogo_Tiendas.get_tiendas();
            Log_in.setVisible(false);
            JOptionPane.showMessageDialog(null,"Bienvenido usuario " + RESULT.getId() + "\n En Momentos se mostrara la ventana de Tiendas en Respuesta al Servidor... se Paciente");
            break;
        case "False":
            JOptionPane.showMessageDialog(null,"Error: Acesso Denegado, la contraseña es incorrecta");
            break;
        case "Fail":
            JOptionPane.showMessageDialog(null,"Error: Acesso Fallido, no Existe Usuario");
            break;
        default:
            break;
    }
:}
        |DATALOGP:val                                                                   {:  RESULT = val; :};

DATALOGP ::=  DI Id DI numero:val DI Id DF                                              {:  RESULT = new Acess();
                                                                                            RESULT.setId(val);
                                                                                            RESULT.concatenar("\t $id$ ");
                                                                                            RESULT.concatenar(val);
                                                                                            RESULT.concatenar(" $id-$\n");
:}
             |DI Access DI bool:val DI Access DF                                        {:  RESULT = new Acess();
                                                                                            RESULT.setValor(val);
                                                                                            RESULT.concatenar("\t $access$ ");
                                                                                            RESULT.concatenar(val);
                                                                                            RESULT.concatenar(" $access-$\n");
:};